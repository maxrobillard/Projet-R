getwd()
runApp()
appRun()
runApp()
runApp
shiny::runApp()
install.packages("magrittr")
install.packages("magrittr")
install.packages("rvest")
shiny::runApp()
install.packages("leaflet")
shiny::runApp()
shiny::runApp()
install.packages("leaflet")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("leaflet.extras")
install.packages("leaflet.minicharts")
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("rgdal")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("sp")
install.packages("rgeos")
install.packages("mapproj")
install.packages("maptools")
install.packages("raster")
runApp()
library(tidyverse)
library(ggplot2)
library(gapminder)
library(ggmap)
install.packages("ggmap")
library(tidyverse)
library(ggplot2)
library(gapminder)
library(ggmap)
install.packages("Rtools")
install.packages("ggmap")
install.packages("raster")
install.packages("ggmap")
install.packages("ggmap")
install.packages("raster")
install.packages("Rtools")
install.packages("maptools")
install.packages("mapproj")
install.packages("rgeos")
library(tidyverse)
library(ggplot2)
library(gapminder)
library(ggmap)
library(tidyverse)
library(ggplot2)
library(gapminder)
library(ggmap)
youth <- read.table("data/youth_cont.csv" , header = TRUE , sep = ',')
jeunes_morts <- read.table("data/jeunes_morts_cont.csv" , header = TRUE , sep = ',')
youth <- read.table("data/youth_cont.csv" , header = TRUE , sep = ',')
jeunes_morts <- read.table("data/jeunes_morts_cont.csv" , header = TRUE , sep = ',')
head(youth)
head(jeunes_morts)
valeur_max <- aggregate(jeunes_morts,by=list(jeunes_morts$Country,jeunes_morts$Year),FUN=max)
valeur_max
library(dplyr)
names(jeunes_morts)
data_clear <- jeunes_morts
select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear <- valeur_max
select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[data_clear$Country=="Iceland"]
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
head(data_clear2)
data_clear2
data_clear <- valeur_max
data_clear <- select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
data_clear2
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
str(data_clear2)
names(data_clear2)
select(data_clear2,-c(Group.1,Group.2))
install.packages("rworldmap")
library(rworldmap)
data_clear3
youth <- read.table("data/youth_cont.csv" , header = TRUE , sep = ',')
jeunes_morts <- read.table("data/jeunes_morts_cont.csv" , header = TRUE , sep = ',')
valeur_max <- aggregate(jeunes_morts,by=list(jeunes_morts$Country,jeunes_morts$Year),FUN=max)
data_clear <- valeur_max
data_clear <- select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
data_clear3 <- select(data_clear2,-c(Group.1,Group.2))
data_clear3
mapped_data <- joinCountryData2Map(data_clear3,joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data)
youth <- read.table("data/youth_cont.csv" , header = TRUE , sep = ',')
jeunes_morts <- read.table("data/jeunes_morts_cont.csv" , header = TRUE , sep = ',')
valeur_max <- aggregate(jeunes_morts,by=list(jeunes_morts$Country,jeunes_morts$Year),FUN=max)
data_clear <- valeur_max
data_clear <- select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
data_clear3 <- select(data_clear2,-c(Group.1,Group.2))
mapped_data <- joinCountryData2Map(data_clear3,joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data)
mapCountryData(mapped_data[,1:18])
mapped_data <- joinCountryData2Map(data_clear3[,1:18],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapped_data <- joinCountryData2Map(data_clear3[1:18,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data)
mapped_data <- joinCountryData2Map(data_clear3[1:18,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data,nameColumnToPlot = "Value")
mapped_data <- joinCountryData2Map(data_clear3[1:32,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data,nameColumnToPlot = "Value")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(mapped_data,nameColumnToPlot = "Value")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100)
mapped_data <- joinCountryData2Map(data_clear3[1:32,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100)
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = "rainbow")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = "viridis")
install.packages("viridis")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = "viridis")
library(viridis)
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = "viridis")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(100))
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = inferno(31))
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",colourPalette = inferno(31))
,catMethod = "categorical"
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = inferno(31))
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
data_clear3
data_clear[(data_clear$Continent=="EU)]
exit
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
europe <- data_clear3[(data_clear3$Continent=="EU)]
europe <- data_clear3[(data_clear3$Continent=="EU"),]
ibrary(tidyverse)
library(ggplot2)
library(gapminder)
library(ggmap)
library(dplyr)
library(rworldmap)
library(viridis)
youth <- read.table("data/youth_cont.csv" , header = TRUE , sep = ',')
jeunes_morts <- read.table("data/jeunes_morts_cont.csv" , header = TRUE , sep = ',')
valeur_max <- aggregate(jeunes_morts,by=list(jeunes_morts$Country,jeunes_morts$Year),FUN=max)
data_clear <- valeur_max
data_clear <- select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
data_clear3 <- select(data_clear2,-c(Group.1,Group.2))
mapped_data <- joinCountryData2Map(data_clear3[1:32,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
europe <- data_clear3[(data_clear3$Continent=="EU"),]
europe
mapped_data_europe <- joinCountryData2Map(europe[(europe$Year==2000),],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data_europe,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
europe[(europe$Year==2000),]
mapCountryData(mapped_data_europe,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31),oceanCol = "grey")
mapCountryData(mapped_data_europe,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31),oceanCol = "black")
mapCountryData(mapped_data_europe,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31),oceanCol = "white")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("riskyr")
runApp()
runApp()
runApp()
mapped_data_europe
europe
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- switch("2000","2000"=mapped_data_europe,"2001"=mapped_data_europe1)
data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("reactive")
europe
reactive({europe}[(europe$Year==2000)])
df<-reactive({europe}[(europe$Year==2000)])
df
runApp()
runApp()
runApp()
runApp()
runApp()
df <- reactive({{europe}[(europe$Year==input$var)]})
df
df <- reactive({{europe}[(europe$Year==2000)]})
head(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- reactive({europe[(europe$Year==2000)]})
df
runApp()
runApp()
runApp()
runApp()
runApp()
europe
m<-europe[(europe$Year==2000)]
names(europe)
valeur_max <- aggregate(jeunes_morts,by=list(jeunes_morts$Country,jeunes_morts$Year),FUN=max)
data_clear <- valeur_max
data_clear <- select(data_clear,-c(X,Unnamed..0_x,Data.type,Unnamed..0_y))
data_clear2 <- data_clear[!(data_clear$Country=="Iceland"),]
data_clear3 <- select(data_clear2,-c(Group.1,Group.2))
mapped_data <- joinCountryData2Map(data_clear3[1:32,],joinCode="ISO3",nameJoinColumn = "COUNTRY")
mapCountryData(mapped_data,nameColumnToPlot = "Value",numCats=100,mapRegion="europe",catMethod = "categorical",colourPalette = viridis(31))
europe <- data_clear3[(data_clear3$Continent=="EU"),]
df <- europe[(europe$Year==2000)]
europe$Year
europe$Year == 2000
europe[europe$Year == 2000]
europe[(europe$Year == 2000)]
